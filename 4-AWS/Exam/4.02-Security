You are developing an online banking website that will be accessed by a global customer base. You are planning to use CloudFront to ensure users experience good performance regardless of their location. The security architect working on the project asks you to ensure that all requests to CloudFront are encrypted using HTTPS. How can you configure this?

"Set the viewer protocol policy to redirect HTTP to HTTPS.

    Viewer protocol policy defines the protocols that can be used to access CloudFront content."

// Reference: Requiring HTTPS for Communication between Viewers and CloudFront

// Set the request protocol policy to redirect HTTP to HTTPS.

// In CloudFront, you cannot set a request protocol policy to redirect HTTP requests to HTTPS.

// Selected
// Set the session protocol policy to redirect HTTP to HTTPS.

Set the user protocol policy to redirect HTTP to HTTPS.
---------------------------------------------------------------------------
You are working as a developer for an online retailer. Your security architect has requested that any files stored in S3 must be encrypted. However, some teams are continuing to upload their files without encrypting them. Which of the following will ensure that only encrypted data is uploaded?

// Select the Encrypted Files Only checkbox in the S3 Permissions tab in the AWS console.

// Tell all team members to include the x-amz-encryption parameter in the request header.

"Use a bucket policy that only allows PUT operations, which include the x-amz-server-side-encryption parameter in the request header.

    There are a few different ways to enforce encryption; however, from the provided options, the use of a bucket policy to reject requests that do not include encryption in their header is the best answer."

// Reference: How to Prevent Uploads of Unencrypted Objects to Amazon S3

// Create a bucket ACL that only allows PUT operations, which include the x-amz-encryption parameter in the request header.

// Using an ACL is not the recommended approach, and x-amz-encryption is not the correct way to specify S3 server-side encryption.
---------------------------------------------------------------------------
What does the following snippet from an IAM policy do?

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "s3:*",
            "Resource":   [
            "arn:aws:s3:::mycustomerdata/*”,
            "arn:aws:s3:::mycustomerdata/”
    ]
        },
     {
            "Sid": "DenyS3Logs",
            "Effect": "Deny",
            "Action": "s3:DeleteObject",
            "Resource": "arn:aws:s3:::mycustomerdata/*log*”
        }
    ]
}"
Allows the ability to delete any objects with log in the name from the mycustomerdata bucket.

"Denies the ability to delete any objects with log in the name from the mycustomerdata bucket.

    The policy denies the s3:DeleteObject action for files with log in the name that are stored in the bucket named mycustomerdata."

// Selected
// Denies the ability to read objects contained in the bucket named mycustomerdata.

??????"Allows read access for all objects contained in the bucket named mycustomerdata.

    The policy allows read access for all objects contained in the bucket named mycustomerdata."

// ???????Allows full access to the bucket named mycustomerdata, including the objects it contains.

// The policy does not allow full access to the bucket named mycustomerdata, including the objects it contains.
---------------------------------------------------------------------------
Your company is storing a large amount of data in S3, including data relating to customers and their credit card information. How can you ensure that any personally identifiable information (PII) that is stored in your companys S3 buckets is identified so that it can be encrypted using encryption keys that are managed by you and are automatically rotated?

// Use Macie to identify objects that contain PII. Use SSE-S3 with automatic key rotation enabled to encrypt the files.

// Use a Lambda function to identify objects that contain PII. Use SSE-S3 with automatic key rotation enabled to encrypt the files.

// It is not necessary to write a Lambda function to identify S3 objects that contain PII. SSE-S3 is the default encryption mechanism, with encryption keys that are managed internally by S3. It does not allow you to configure automatic key rotation.

Selected
"Use Macie to identify objects that contain PII. Use an SSE-KMS key with automatic key rotation enabled to encrypt the files.

    Macie can be used to identify objects that contain PII. SSE-KMS supports automatic key rotation."

// Use a Lambda function to identify objects that contain PII. Use SSE-C with automatic key rotation enabled to encrypt the files.
---------------------------------------------------------------------------
A cloud engineer is working on deploying a new CloudFront distribution for the subdomain learn.acloud.guru. They have been instructed to enforce HTTPS connections using a custom TLS certificate. After researching, they have decided to leverage AWS ACM for the certificate management portion. What else should the engineer do to make use of the certificate within CloudFront?

"Create the certificate in the us-east-1 (N. Virginia) Region.

    All TLS certificates used with Amazon CloudFront distributions via AWS ACM must exist in the us-east-1 Region."

// Reference: CloudFront TLS Regions

// Use ACM to create the certificate in the Region where the majority of your customers are located.

// Use ACM to create the certificate in the Region where the CloudFront origin is located.

// When using ACM to host certificates used by CloudFront, it is not supported to use a certificate wherever the origin is located.

// Selected
// Use ACM to create the certificate in a Region of your choice.
---------------------------------------------------------------------------
Which of the following is required in order to enable an existing Lambda function to access EC2 instances that are located in a private VPC?

// Update the permissions in your VPC to allow Lambda to access the EC2 instances.

// Configure the function policy to allow EC2 to invoke the function.

"Modify the function configuration, and choose the correct subnets and security groups.

    To configure private VPC access for an existing function, you will need to modify the function configuration, and select the correct subnets and security groups."

// Reference: Configuring a Lambda Function to Access Resources in a VPC

// Configure the Lambda function's execution role to match the role applied to your EC2 instances.

// It is not necessary to configure the Lambda function's execution role to match the role applied to your EC2 instances. This will not enable private VPC access for the function.
---------------------------------------------------------------------------
You are working on a mobile phone app for an online retailer that stores its customer data in DynamoDB. You would like to enable new users to sign up using Facebook or Google credentials. What is the recommended approach?

// Embed encrypted AWS credentials into the application code, so that the application can access DynamoDB on the users behalf.

// Write your own custom code that allows the user to log in via a web identity provider and receive an authentication token, which then calls the AssumeRoleWithWebIdentity API and exchanges the authentication tokens for temporary access to DynamoDB.

// After the user has authenticated with Facebook, allow them to download encrypted AWS credentials to their device so that the mobile app can access DynamoDB.

"Once the user has logged in to the web identity provider, use Cognito to exchange the authentication tokens for temporary access to DynamoDB.

    Using Cognito is the recommended approach to federating with web ID providers for mobile applications."
---------------------------------------------------------------------------
Your mobile application needs to read data from DynamoDB. What is the AWS-recommended way to give mobile devices permissions to read from DynamoDB?

// Connect your application to an EC2 instance with permission to read from DynamoDB.

// Create an IAM role for your users.

"Create an IAM role that can be assumed by an app that allows federated users.

    Web identity federation removes the need for creating individual IAM users. Instead, users can sign in to an identity provider and then obtain temporary security credentials from the AWS Security Token Service."

// Reference: Using Web Identity Federation

// Selected
// Issue an access key and secret access key to each user.
---------------------------------------------------------------------------
2






---------------------------------------------------------------------------






---------------------------------------------------------------------------
Your e-commerce application needs to use database connection strings to access an RDS database containing product and customer data. Which of the following is a secure and scalable way to manage this?

"Store the credentials in Parameter Store.

Using secure string parameters in Parameter Store is an appropriate way to avoid hard-coding a password in your template code. This ensures that sensitive runtime parameters are kept as secure as you keep other secrets, while also keeping them separate from your deployment code. Reference: Systems Manager - Parameter Store Using AWS Systems Manager Parameter Store Secure String parameters"

// Add encrypted IAM credentials to the application server and use an IAM role to access the database.

// Although this could work, it would be dependent on IAM credentials, which, if leaked, could cause a potential security risk.

// Selected
// Hard-code the connection strings in the application code.

// Store the encrypted credentials in an S3 bucket.
---------------------------------------------------------------------------
You are developing a mobile web application using Lambda and API Gateway, which stores persistent data in a DynamoDB table. You want to configure the application to allow new users to sign up to your website using their Google credentials. Which is the best approach?

// Configure AD federation with Google as the reliant party.

"Configure a Cognito user pool to handle new user sign-up.

Cognito is the recommended approach for user sign-up and sign-in for mobile applications, which allow access to users with Facebook, Google or Amazon.com credentials. User pools are user directories that provide sign-up and sign-in options for your app users. Reference: What Is Cognito?
"
// Write custom code to act as an identity broker to federate with Google.

// Use a Cognito identity pool to handle new user sign-up.

// Cognito is the recommended approach for user sign-up and sign-in for mobile applications which allow access to users with Facebook, Google or Amazon credentials. Identity pools enable you to grant your users access to other AWS services. Reference: What Is Cognito?
---------------------------------------------------------------------------
When using the AWS REST API to upload an object to S3, which of the following request headers will ensure that your data must be encrypted using SSE?

// s3-amz-server-side-encryption

// s3-amz-server-side-encryption is not the correct request header to ensure that your data is encrypted using SSE.Reference: Protecting Data Using Server-Side Encryption

"Selected
x-amz-server-side-encryption

To request server-side encryption using the object creation REST APIs, provide the x-amz-server-side-encryption request header. Reference: Protecting Data Using Server-Side Encryption"

// x-s3-server-side-encryption

// amz-s3-server-side-encryption
---------------------------------------------------------------------------
Your application runs on a fleet of EC2 instances behind an Elastic load Balancer. Due to security compliance, your organization wants any secret strings used in the application must be encrypted to avoid exposing secrets in clear text. The security architect has requested that all decryption activities are audited so that any API calls to decrypt the secrets can be traced. How can this be achieved?

"Audit the API calls using CloudTrail.

CloudTrail is the correct service to use to track API calls to AWS resources in your account."

// Audit the API calls using CloudWatch Logs.

// Use Parameter Store to store any secrets in plain text.

"Use KMS server side encryption to encrypt the secrets before storing them in Parameter Store.

It is not necessary to encrypt the secrets before storing them. Parameter Store integrates with KMS to encrypt and decrypt data.
"
// Selected
// Use Parameter Store to store any secrets as a SecureString.

// By using Parameter Store to store any secrets as a SecureString, the secrets are encrypted and not stored in plain text.
---------------------------------------------------------------------------
You are developing an e-commerce application that will run on an autoscaling group of EC2 instances. The application processes incoming transactions from a third-party payment provider. Occasionally, the third-party provider sends a transaction that is not valid. When that happens, the application must send an instant message to your fulfillment team using a proprietary API. To send the message, the application needs to retrieve the access token to authenticate by using the proprietary API. You have been asked to implement a secure solution to store the access token in an encrypted format so that the application can send instant messages. The access token must also be accessible from other AWS accounts. Which solution will meet these requirements with the LEAST management overhead?

// Use KMS to encrypt the access token. Store the encrypted access token in DynamoDB. Add a resource-based policy to the secret to allow access from other accounts. Update the IAM role of the EC2 instances with permissions to access DynamoDB and KMS. Use the decrypted access token to send the messages.

// Storing access tokens in DynamoDB is not best practice. AWS provides services that enable you to store and share sensitive data like access tokens.

"Selected
Use Secrets Manager with a KMS key to store the access token. Add a resource-based policy to the secret to allow access from other accounts. Update the IAM role of the EC2 instances with permissions to access Secrets Manager. Retrieve the token from Secrets Manager to send the messages.

Secrets Manager is designed to store secrets like access tokens, passwords and other sensitive data, enabling the data to be seamlessly encrypted and decrypted."

// Encrypt the access token using KMS. Store the access token in an encrypted S3 bucket. Add a bucket policy enabling access for the EC2 instances and the other accounts. Update the IAM role of the EC2 instances with permissions to access the S3 bucket and the KMS key. Retrieve the token from the S3 bucket. Decrypt the token using KMS on the EC2 instances, use the decrypted access token to send the messages.

// Use Parameter Store to create a SecureString parameter that uses a KMS key to encrypt the access token. Add a resource-based policy to the parameter to allow access from other accounts. Update the IAM role of the EC2 instances with permissions to access Parameter Store. Use a Lambda function to retrieve the token from Parameter Store with the decrypt flag enabled. Use the decrypted access token to send the messages.
---------------------------------------------------------------------------

---------------------------------------------------------------------------
---------------------------------------------------------------------------





3
---------------------------------------------------------------------------






---------------------------------------------------------------------------
You are developing a Lambda function written in Python that uploads a number of sensitive files to S3. The application architect has told you to use client-side encryption to protect the files. How can you do this?

Select the Encryption checkbox in the Lambda console.

Encrypt your local root disk before uploading the files.

'Encrypt the files using the AWS Encryption SDK.

Client-side encryption means you need to encrypt the files where they are currently stored before uploading them to S3. You can do this in Lambda by using the AWS Encryption SDK.'

Use SSL to upload the files.

Select S3 default encryption.

S3 default encryption will encrypt the data when it is stored in S3, which is known as server-side encryption.
---------------------------------------------------------------------------
An organization has mandated that all files stored in their newly created S3 bucket, top-secret-documents, must be encrypted using a customer master key stored in KMS. Which of the following could be used to enforce this requirement?

Enable S3 default encryption and select AWS-KMS.

Setting a default encryption type on the bucket is not sufficient as the default only applies to uploaded objects that do not specify any encryption type. For example, if the default encryption is set to AWS-KMS, but an object is uploaded with the header x-amz-server-side-encryption: AES256, the resulting object is encrypted using SSE-S3, not SSE-KMS.

Reference: Protecting S3 Data Using Server-Side Encryption Reference: Example Bucket Policy for Enforcing SSE

Selected
Add a bucket policy that denies PUT operations that dont contain the HTTP header x-amz-server-side-encryption: AES256.

Add a bucket policy that denies PUT operations that dont contain the HTTP header x-amz-server-side-encryption: SSE:C.

'Add a bucket policy that denies PUT operations that dont contain the HTTP header x-amz-server-side-encryption: aws:kms.

To ensure objects are stored using a specific type of server-side encryption, you must use a bucket policy. In this case, the bucket policy must ensure the encryption type matches SSE-KMS.'
---------------------------------------------------------------------------
You work for a health insurance company that is storing large amounts of customer data in an S3 bucket. Many of the files that are being stored are customer contracts that include client bank details, addresses, and social security numbers. A new head of security has requested that you find a solution to identify files containing personally identifiable information (PII) and ensure that the files are encrypted using an encryption key that is owned and administered by the security team and automatically rotated on an annual basis. Which of the following solutions do you recommend?

Create a new SSE-C encryption key in KMS using imported key material supplied by the security team. Create a Lambda function to scan the files and identify personally identifiable information that is stored in S3, and trigger another function to encrypt the data using the SSE-C key. Configure automatic key rotation in KMS.

Use Macie to identify personally identifiable information. Use S3 default encryption to encrypt the files, with automatic rotation enabled for the KMS key.

'Use Macie to identify personally identifiable information. Create an SSE-KMS key that is administered by the security team, and enable automatic rotation for the KMS key. Encrypt the files using SSE-KMS.

        Macie is the service that helps you identify any PII that is stored in S3. An SSE-KMS key is an encryption key that can be administered by you. Automatic key rotation can be enabled for SSE-KMS keys.'

Use Macie to identify personally identifiable information. Create an SSE-KMS key that is administered by the security team. Create an EventBridge rule to trigger a Lambda function that rotates the encryption key on an annual basis. Encrypt the files using SSE-KMS.

        It is not necessary to create a Lambda function to perform the key rotation. This can be done automatically by KMS for SSE-KMS keys.
---------------------------------------------------------------------------
You have an application running on multiple EC2 instances; however, every time an instance fails, your users complain that they lose their session. What can you do to prevent this from happening?

'Store session state in Amazon ElastiCache, then disable sticky sessions.

There are various ways to manage user sessions, including storing those sessions locally to the node responding to the HTTP request or designating a layer in your architecture that can store those sessions in a scalable and robust manner. Common approaches used include utilizing sticky sessions or using a distributed cache for your session management. In order to address scalability and to provide a shared data storage for sessions that can be accessed from any individual web server, you can abstract the HTTP sessions from the web servers themselves. A common solution for this is to leverage an in-memory key-value store such as ElastiCache.'


Store session state in S3.

Store session state in Amazon RDS.

Store session state on the Elastic Load Balancer.

Elastic Load Balancing automatically distributes incoming application traffic across multiple targets, such as Amazon EC2 instances, containers, IP addresses, Lambda functions, and virtual appliances. It isnt suitable for session management.

Selected
Store session state on a dedicated EC2 instance.
---------------------------------------------------------------------------
---------------------------------------------------------------------------
You are working on a flight booking application that runs on a number of EC2 instances. Recently, one of your servers crashed, which meant all of your users lost their sessions and had to log in again. Many of your customers have complained that they had to start their session again from the beginning because your application does not store session state anywhere. Which of the following could you use to persist session state and prevent this from happening?

Elastic Block Storage

'DynamoDB

Many applications store session state data in memory. However, this approach doesnt scale well. After the application grows beyond a single web server, the session state must be shared between servers. Amazon DynamoDB provides an effective and scalable solution for sharing session state across web servers.'

Reference: Managing ASP.NET Session State with Amazon DynamoDB

Selected
S3 Glacier

S3
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------





4
---------------------------------------------------------------------------






---------------------------------------------------------------------------
A developer is looking to implement a load balancing solution for a web-based, service-oriented application deployed in Amazon EC2. The solution must support path-based routing and traffic encryption between the load balancer, and the clients must be encrypted. What is the most performant method to achieve these requirements?

Use an Application Load Balancer. Deploy SSL certificates on the EC2 instances.

An Application Load Balancer does support path-based routing; however, for best performance, you should deploy the SSL certificates on the load balancer. This implements SSL termination on the load balancer and offloads this task from the application, thus reducing the load on EC2 instances.

Selected
'Use an Application Load Balancer. Deploy SSL certificates on the Application Load Balancer.

    The application requirement states support for path-based routing. This means that you must use an Application Load Balancer, as a Network Load Balancer does not have this feature. It is best practice to deploy the SSL certificates on the load balancer. This implements SSL termination on the load balancer and offloads this task from the application, thus reducing the load on EC2 instances. Additionally, it removes the requirement of distributing the certificate to all target EC2 instances.'

Reference: Create an HTTPS Listener for Your Application Load Balancer

Use a Network Load Balancer. Deploy SSL certificates on the Network Load Balancer.

Use a Network Load Balancer. Deploy SSL certificates on the EC2 instances.
---------------------------------------------------------------------------
As a developer, you have been asked to help to scale out an existing an application to run in multiple AWS Regions. The application runs on a fleet of EC2 instances located in us-east-1. The solutions architect has requested that you use the same Amazon Machine Image with the latest security updates and create a new application stack in us-east-2. The security architect has requested that all AMIs that are in use in the company must be encrypted. However, after checking which AMI was used in us-east-1, you discover that the AMI that was used was not encrypted. Which of the following should you implement in order to meet the requirements of the project?

Copy the unencrypted AMI to us-east-2. Add the latest security updates and check that the AMI boots successfully. Then, enable encryption on the new AMI.

It is not possible to enable encryption on an AMI after it has been created.

Selected
Use CloudFormation to create a new AMI in us-east-2 with the security updates included. Specify that the new AMI will be encrypted. Delete the original unencrypted AMIs.

Delete the unencrypted AMIs. Copy the AMI to us-east-2. Enable KMS encryption on the unencrypted AMIs. Add the latest security updates to the AMI.

'Use EC2 Image Builder to create new AMIs with the security updates included. Specify that the new AMI will be encrypted. Configure the new AMIs to be distributed to us-east-2. Delete the original unencrypted AMIs.

    You can use EC2 Image Builder to create new encrypted AMIs with the security updates included and distribute them to your chosen regions. You should delete the unencrypted AMIs to prevent anybody from using them in us-east-1.'
---------------------------------------------------------------------------
A developer needs to replace an item that is stored in an existing DynamoDB table. Which of the following DynamoDB API calls will they need permissions for to enable them to successfully replace the item?

UpdateItem

PutItem

PutItem adds a new item into a table or replaces an old item with a new one.

'UpdateTable

UpdateTable is used to modify a table (e.g., modify the provisioned throughput settings of the table).
'
Selected
DynamoDB full access
---------------------------------------------------------------------------
A developer has created an S3 bucket to store sensitive files. They would like to configure the S3 bucket to only serve content over HTTPS/SSL and explicitly deny all unencrypted HTTP access. They would also like to enforce that server-side encryption is always used. Which of the following should they include in the bucket policy in order to configure this?

The bucket policy should deny traffic that meets the following condition: "s3:x-amz-server-side-encryption": "true".

The bucket policy should deny traffic that meets the following condition: "aws:SecureTransport": "true".

The bucket policy should deny traffic that meets the following condition: "aws:SSLTransport": "true".

'The bucket policy should deny traffic that meets the following condition: "s3:x-amz-server-side-encryption": "false".

    Explicitly denying requests that are identified as "s3:x-amz-server-side-encryption": "false" would deny requests that do not use server-side encryption.'

Selected
'The bucket policy should deny traffic that meets the following condition: "aws:SecureTransport": "false".

    Explicitly denying requests that are identified as "aws:SecureTransport": "false" would deny requests that are using HTTP and are unencrypted.'

Selected
The bucket policy should deny traffic that meets the following condition: "s3:x-amz-sse-encryption": "false".