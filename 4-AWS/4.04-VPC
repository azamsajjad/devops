VPCs are region specific 
You can create 5 VPCs per region 
Every region comes with a default VPC 
you can have 200 Subnets per VPC 
You can use ipv4 CIDR blocks in addition to ipv6 CIDR blocks
ZERO COST=VPC,RT,IG,SG,Subnets,VPC Peering
SOME COST=NAT Gateway,VPC Endpoints,VPN Gateway,Customer Gateway

0.0.0.0/0 = default (represents all possible IP addresses)

ROUTE TABLES .
-are used to determine where network traffic is Directed
-Each subnet in you VPC must be associated with a RT 
-A subnet can be associated with 1 RT at a time 
-but you can attach multiple subnets to 1 RT

INTERNET GATEWAY .
-provide a target in your VPC route tables for internet-routable traffic
-performs NAT (network address translation) for instances that have been assigned public IPV4 addresses 
    To route out to the Internet, you need to add in your route tables - a route to the internet gateway and set the destination to 0.0.0.0/0

BASTIONS / JUMPBOX .
Bastions are in public subnet 
bastions are EC2 instances which are security harden. they are designed to help you gain access to your private subnet EC2 Instances via SSH/RCP 
NATs cannot and shouldnot be used as Bastions
    Although System Manager's Sessions Manager replaces the need for Bastions'. They are still used in many organizations

VPC PEERING / AWS PRIVATELINK
VPC ENDPOINTS:
allow you to privately connect your VPC to other AWS services and VPC endpoint services.
    Eliminates the need for an Internet Gateway, NAT device, VPN connection or AWS Direct Connect connections (ultra-fast speeds)
    Instances in the VPC wont require public IP addresses to communicate with service resources
    Traffic b/w your VPC and other services doesnot leave AWS network 
    Horizontally scaled, reduntant, highly available VPC component 
    Allow secure connection b/w Instances & Services

    internet--->VPC (EC2)------>Router--->VPC(GE) Endpoint--->S3 bucket

    2 Types:
    INTERFACE ENDPOINT ARE ROUTED THROUGH DNS .
    GATEWAY ENDPOINTS ARE ROUTED THROUGH ROUTE TABLES .
        1- Interface Endpoints
           IE are physical Elastic Network Interfaces (ENI) with private IP
           IE serve as entry point for traffic going to supported services 
           IE are powered by AWS PrivateLink 
           Pricing:
            per VPC endpoint per AZ $0.01/hour  
            per GB data processed $0.01/hour  both approx. $7.5/month
           Supported Services:
            API Gateway,CloudFormation,kinesis,sns,sqs,kms,systems manager,
            ec2,elb,cloudwatch,codebuild,aws config,sagemaker,secrets m,
            endpoints services 

        2- Gateway Load Balancer Endpoint
            A Gateway Load Balancer endpoint is an elastic network innterface with a private IP address from the IP address range of your subnet. This type of endpoint serves as an entry point to intercept traffic and route it to a service that youve configured using Gateway Load Balancers, for example, for security inspection. You specify a Gateway Load Balancer endpoint as a target for a route in a route table. Gateway Load Balancer endpoints are supported for endpoint services that are configured for Gateway Load Balancers only. 

            Like innterface endpoints, Gateway Load Balancer endpoints are also powered by AWS PrivateLink.

        3- Gateway Endpoints
           GE is a gateway that is a target for a specific route in your route table, used for traffic destined for a supported aws service
           To create GE, you specify VPC in which you want to create the endpoint, and the service to which you want to establish the connection
           currently supports 2 services:
            S3
            DDB
           GE is FREE
           NO additional charge except standard data transfer and resource usage charges
           usage: to enable private instance connect to S3 bucket

VPC endpoint pricing

Interface endpoints and Gateway Load Balancer endpoints are charged for each hour the VPC endpoint remains provisioned in each Availability Zone and for each gigabyte processed through the VPC endpoint. For more information, see AWS PrivateLink pricing.

There is no additional charge for using gateway endpoints. Standard charges for data transfer and resource usage apply. You might be able to reduce costs by selecting gateway endpoints for traffic destined to DynamoDB or Amazon S3.

SECURITY GROUPS:
A virtual firewall at the EC2 level 
-that controls the traffic to and from EC2 instances
there are no Deny rules, all traffic is blocked by default
SGs are STATEFUL, if traffic is allowed inbound, it is allowed outbound
multiple instances across multiple subnets can belong to a security group
any change to SG takes effect immediately
you cannot block specific IPs, for that you need NACL network acls

you can specify the source to be an IP range or a specific IP (/32)
you can specify the source to be another security group
you can have 10,000 security groups in a region (default is 2,500) 
    ->service limit increase request
you can have 60 inbound and 60 outbound rules per security group 
16 security groups per Elastic Network Interface (ENI) default is 5


NACL Network Access Control Lists .
A Virtual firewall at the Subnet Level
an optional layer of security that acts as a firewall for controlling traffic In and Out of Subnets .
NACL are STATELESS, can have d/f inbound and outbound rules
when you create a VPC, you get a NACL by default
each NACL contains a set of rules that can allow or deny traffic inbound or outbound from a subnet
you can block a single IP address, cant do that with Security Group 
'Rule #' determines the order of evaluation. from lowest to highest.
the highest 'Rule #' can be 32766
but its recommended to work in 10 or 100 increments

========================================================================
AWS PrivateLink .
AWS PrivateLink Highlights

With AWS PrivateLink you no longer need to choose between using a service and exposing your critical data across the internet.  Instead, you can connect your VPCs in a secure, scalable manner that eliminates exposure over the Internet.  

AWS PrivateLink is best suited for scenarios where you want to share a single service to many VPCs when connecting them to supported services:  AWS Marketplace applications, AWS services, and your own VPCs.  

Network management can be simplified because with AWS PrivateLink you will no longer need an internet gateway, public IP address for VPCs, firewall rules, proxy devices, or route tables, all while reducing vulnerability to threat vectors.  

STEP1
Create a Network Load Balancer for your application in your VPC and configure it for each subnet (Availability Zone) in which the service should be available. The load balancer receives requests from service consumers and routes it to your service. 


Open the Amazon VPC console at https://console.aws.amazon.com/
In the navigation pane, choose Endpoints, Create Endpoint. 

AWS PrivateLink Pricing

AWS Privatelink (interface endpoints) are billed on three different dimensions: per endpoint per Region, per Availability Zone where an endpoint is deployed, and amount of data processed (inbound and outbound). Each partial VPC endpoint-hour consumed is billed as a full hour. You are, of course, still responsible for any costs associated with the services you use with the endpoints, so be sure to consider that when making calculations, if using AWS PrivateLink will result in increased service usage elsewhere.  
=======================================================================
AWS Client VPN

AWS Client VPN provides secure access to AWS resources in the cloud and on-premises networks from any location. This course contains two independent lessons:


NEW TECH: AVA - AWS verified access
policy language: cedar 

-------------------------------------------------------------------------

$ aws ec2 create-vpc --cidr-block 10.0.0.0/22 --region us-east-2 --tag-specifications ResourceType=vpc,Tags=[{Key=Name,Value=DemoVPC2}]

$ aws ec2 describe-vpcs --region us-east-2

$ aws ec2 create-internet-gateway --region us-east-2 --tag-specifications ResourceType=internet-gateway,Tags=[{Key=Name,Value=DemoIGW2}]

$ aws ec2 attach-internet-gateway --region us-east-2 --internet-gateway-id igw-034320fefgtr450 --vpc-id vpc-234j3jvrg54i5gtr

aws ec2 create-subnet --region us-east-2 --tag-specifications ResourceType=subnet,Tags=[{Key=Name,Value=PublicSubnetDemoVPC}]
--cidr-block 10.0.0.0/25 --vpc-id vpc-324324j2nrjj32432 

aws ec2 create-route-table --region us-east-2 --tag-specifications ResourceType=route-table,Tags=[{Key=Name,Value=DemoVPCPublicRT}]
--vpc-id vpc-324324j2nrjj32432 



---------------------------------------------------------------------------
VPC PEERING .
Benefits of VPC peering

A VPC peering connection is highly available. This is because it is neither a gateway nor a VPN connection and does not rely on a separate piece of physical hardware. There is no bandwidth bottleneck or single point of failure for communication. A VPC peering connection helps to facilitate the transfer of data. 

You can establish peering relationships between VPCs across different AWS Regions. This is called inter-Region VPC peering. It permits VPC resources that run in different AWS Regions to communicate securely with each other. Examples of these resources include EC2 instances, Amazon Relational Database Service (Amazon RDS) databases, and AWS Lambda functions. This communication is accomplished using private IP addresses, without requiring gateways, VPN connections, or separate network appliances. All inter-Region traffic is encrypted with no single point of failure or bandwidth bottleneck. Traffic always stays on the global AWS backbone and never traverses the public internet, which reduces threats such as common exploits and distributed denial of service (DDoS) attacks. Inter-Region VPC peering provides an uncomplicated and cost-effective way to share resources between Regions or replicate data for geographic redundancy.

You can also create a VPC connection between VPCs in different AWS accounts.

---------------------------------------------------------------------
AWS Transit Gateway

AWS Transit Gateway is a highly available and scalable service that provides interconnectivity between VPCs and your on-premises network. Within a Region, AWS Transit Gateway provides a method for consolidating and centrally managing routing between VPCs with a hub-and-spoke network architecture.

Between Regions, AWS Transit Gateway supports inter-regional peering with other transit gateways. It does this to facilitate routing network traffic between VPCs of different Regions over the AWS global backbone. This removes the need to route traffic over the internet. AWS Transit Gateway also integrates with hybrid network configurations when a Direct Connect or AWS Site-to-Site VPN connection is connected to the transit gateway.

Attachments
–
AWS Transit Gateway supports the following connections: 

One or more VPCs
A compatible Software-Defined Wide Area Network (SD-WAN) appliance
A Direct Connect gateway
A peering connection with another transit gateway
A VPN connection to a transit gateway

------------------------------------------------------------------------
AWS SITE-to-SITE VPN .
To ensure operational stability in case of failures, AWS VPN has built in high availability. AWS Site-to-Site VPN connection has two tunnels, with each tunnel using a unique virtual private gateway public IP address connecting to a single customer gateway. It is important to configure both tunnels for redundancy. Then, if one tunnel becomes unavailable (for example, if it is down for maintenance), network traffic is automatically routed to the available tunnel for that specific connection. 

AWS Site-to-site VPN connection to access resources in an Amazon VPC, you are cumulatively bound by the virtual gateway throughput of 1.25 Gbps.

-------------------
You are a senior network engineer for a large regional charity that uses Amazon Web Services (AWS) to host all the organization's systems and services. The organization recently expanded their reach by merging with three smaller charities located in a nearby city. All three charities also use AWS to host their systems and services. As the mergers were finalized, IT departments quickly integrated services by establishing peering connections with the other charities' virtual private clouds (VPCs).



Now that the merger is complete, the offices of the three charities in the nearby city will be consolidated into a single office as a cost-savings measure. The IT director has asked you to use the new office as an opportunity to simplify the new organization's network and centralize management as much as possible. 

Transit Gateway .
Answer: AWS Transit Gateway

AWS Transit Gateway lets you route all the organization's traffic to and from each VPC through a centrally managed service. AWS Transit Gateway allows you to directly connect the charity's AWS Site-to-Site VPN and Direct Connect circuit. That provides one service to facilitate communication from all on-premises locations to all the organization's AWS hosted services.

AWS Transit Gateway Network Manager provides a single global view of your private network. You can define the resources you want to monitor on the AWS Transit Gateway Network Manager dashboard. And you can visualize your network on a topology diagram or a geographical map. You can quickly access usage metrics and establish alerts for changes in the status of the resources you have registered. AWS Transit Gateway Network Manager also integrates with many software-defined networking in a wide area network (SD-WAN) AWS Partner offerings. So you can monitor your on-premises network resources from one centralized console.'
---------------------------------------------------------------------------
Your company is implementing a centralized logging and analytics service for the Amazon Web Services (AWS) hosted systems. Over time, the company's AWS environment has grown into an environment with eight virtual private clouds (VPCs) across three Regions. This is likely the largest number of VPCs necessary for the business going forward.

Two solutions are under consideration for this new service. The first solution proposes linking each VPC within a Region to a dedicated transit gateway. Each transit gateway would be connected to an isolated VPC that hosts only the new logging and analytics service.

The other solution proposes the use of VPC peering to connect each of the eight VPCs to an isolated VPC hosting the new logging and analytics service.


Which solution is currently the best balance of cost and performance?

Answer: VPC peering

The VPC peering connection offers the best balance of cost and performance. The first solution requires three transit gateways that will peer with the new service VPC. Each transit gateway will incur a VPC connection and data transmission charge. VPC peering connections only incur a data transmission charge. VPC peering connections, unlike transit gateways, have no aggregate bandwidth restriction. Lastly, deploying a transit gateway adds a hop between the data source and the data destination. That could potentially increase the connection's latency. VPC peering does not add any additional hops.
----------------------------------------------------------------------

INTER_REGION VPC PEERING .
Inter-Region VPC peering lets you share
resources or replicate data between Regions
without your traffic leaving the global AWS
backbone.
This uncomplicated and cost-effective service
reduces external threat vectors such as
distributed denial of service (DDoS) attacks or
common code or configuration exploits. This is
because your traffic never traverses the public
internet.

Just-in-time routing of users to the Region with the lowest latency (best response time) relative to their location

In the following diagram, "peering connection" Amazon Route 53 routes end users to the Region with the least latency. The databases in each Region are synchronized using a VPC peering connection between the two Regions. If a user reconnects after their session is interrupted, this design ensures they can resume their session regardless of which Region they reconnect to. For example, the user begins their session in Region 1 and is disconnected. When they reconnect, they are routed to Region 2. They can resume their session because the databases are synchronized through the VPC peering connection.

AWS Transit Gateway also supports AWS VPN and Direct Connect gateways, offering the ability to centrally manage incoming and outgoing traffic to a Region.

ref: image transit gateway complex

Transit gateways are a regional service and support a hub-and-spoke network design within the Region in which they are deployed. This permits traffic from one connected VPC to route to any other connected VPC through that Regions transit gateway. Transit gateway inter-Region peering is nontransitive. This means that traffic routing between Regions can only pass from the transit gateway in the originating Region to the transit gateway in the destination Region.

To make a highly available multiregional AWS environment using transit gateways, a mesh network design is required. A mesh design ensures that each transit gateway has a peered connection with every other transit gateway in the environment, so traffic moves across the environment as needed.


=========================================================================
INTER_REGION TRANSIT GATEWAY PEERING CONNECTION.
The primary Region transit gateway is
peered with a remote Region transit
gateway. AWS Transit Gateway uses the
Autonomous System Number (ASN) to
peer with another transit gateway. Border
Gateway Protocol (BGP) is the routing
protocol used for peering.
tgw-05945b035565eb733
tgw-0021df6e665b727d7 primary

Blackhole routes are created for subnets
in VPC B and VPC D to filter neOvork
traffic. A blackhole route in a transit
gateway route table drops traffc that
matches the route. In the DIY section, a
blackhole route for the subnet in VPC C is
created.
PRIMARY
1- create Transit gateway attachments in Primay 
REMOTE
2- accept Transit gateway attachments in Remote.
3- create Transit gateway route tables Association in Remote.
4- replace Transit gateway route tables Route 0.0.0.0/0 to peering TGW 
5- add Route in Remote VPCs Route Table 0.0.0.0/0 to its own TGW
PRIMARY
6- create Transit gateway route tables Association in Primary with rTGW
7- create Transit gateway route tables Route in Primary.10.4.0.0/16 to rVPC
8- create Transit gateway route tables Route pvtsubnt 10.2.0.0/24 blackhole
   create Transit gateway route tables Route pvtsubnt 10.1.0.0/24 blackhole
   create Transit gateway route tables Route pvtsubnt 10.3.0.0/24 blackhole
------------------------------------------------------------------------
VPC FLOW LOGS 
Create Log Group
create flow log for instance A
Configure session manager timeout preference from 20 to 60 minutes 
open instance B -> iperf3 -s 
open instance A -> iperf3 -c 10.1.0.182 -P 2 -t 30
goto log group -> goto log insights -> Select log groups, and then run a query or choose a sample query -> top 10 bytes sent by src & dest addresses
APPLY:
eni-0a966b9abe44a8f5f
44.194.189.223
Tunnel 1	34.195.137.105
Tunnel 2	54.89.92.134
Pre-Shared Key   Tunnel 1        : J2rv8S_0i.lBtjwMkKY3ne4ZyYezmBFL
-------------------------------------------------------------------------
'
High availability
Achieved by implementing redundant components and eliminating single points of failure

Virtual private cloud (VPC) peering
Lets you route traffic between two VPCs privately

AWS Direct Connect
Provides private, high-bandwidth connectivity between AWS and your data center

Virtual private cloud (VPC) endpoint
Connects your VPC and supported services, and keeps network traffic within the AWS network




----------------------------------------------------
AWS Site-to-Site VPN and Direct Connect are both services that let you connect an on-premises network to instances in a VPC.

---------------------------------------------------
Using Amazon Web Services (AWS) managed services, how can you establish communication between multiple virtual private clouds (VPCs) in different Regions?

Use transit gateways to connect the VPCs within each Region, and then create one-to-one peer connections between each transit gateway.

Use VPC peering to create one-to-one connections between each VPC.
--------------------------------------------------
You have multiple virtual private clouds (VPCs) connected using VPC peering. Which reason might lead you to consider converting your architecture to a hub-and-spoke design pattern using AWS Transit Gateway to replace your current VPC peering connections?

"You want to reduce operational overhead associated with managing multiple VPC peering connections that regularly need to be added or removed."

Correctly selected
Your VPCs are in a dozen different Regions, and you want to link them using a single transit gateway.

Correctly unselected
You want to reduce costs associated with VPC peering connections.

Correctly unselected
You want to increase the bandwidth limit beyond what VPC peering provides.

-------------------------------------------------------
Virtual Private Gateway
A logistics company has a web application hosted on an EC2 instance in VPC A. They want to securely access it from their own VPC B, so only the connections initiated from VPC B to VPC A are allowed.

Which of the following options offers the BEST one-way access pattern?
A Virtual Private Gateway (VGW) allows communication between a VPC and other networks over a Virtual Private Network (VPN) connection. It is often used for secure communication between a VPC and an on-premises network or between VPCs in different AWS accounts or regions.

// In this scenario:

// VPC Peering: VPC peering allows direct communication between VPCs. However, it provides mutual access, meaning both VPCs can initiate connections to each other. This doesn't meet the requirement of allowing only connections initiated from VPC B to VPC A.

// AWS PrivateLink: AWS PrivateLink allows direct access to services over an Amazon VPC. It doesn't directly address communication between VPCs.

// Internet Gateway: An Internet Gateway is used for providing internet access to resources in a VPC. It's not suitable for establishing secure communication between VPCs.

// Virtual Private Gateway: A Virtual Private Gateway allows for secure communication between a VPC and other networks, including another VPC. In this scenario, you can set up a VPN connection from VPC B to VPC A, which will allow VPC B to initiate connections to VPC A while keeping the communication secure. This is the best option for a one-way access pattern initiated from VPC B to VPC A.




======================
Your company has many browser-based applications that your employees need to access remotely. You must ensure these connections are secure and follow a Zero Trust approach. You also need to make the user experience as simple and seamless as possible.

Which AWS service is the best fit for this use case?


AWS Cloud WAN

AWS Direct Connect

AWS Transit Gateway

====AWS Verified Access (AVA)====

========================
A customer has configured a 10 GBps AWS Direct Connect Connection.

Which parameter is unique to the creation of a private virtual interface?


VLAN

Virtual Interface Name

AWS Direct Connect Connection Id

====Virtual Private Gateway Id (VGW)====

========================
AWS LATTICE
Q: What use cases does Amazon VPC Lattice address?
VPC Lattice helps address the following use cases:

Connect services at scale – Connect thousands of services across VPCs and accounts without increasing network complexity.

Apply granular access permissions – Improve service-to-service security and support Zero Trust architectures with centralized access controls, authentication, and context-specific authorization.

Implement advanced traffic controls – Apply granular traffic controls, such as request-level routing and weighted targets, for blue/green and canary deployments.

Observe service-to-service interactions – Monitor and troubleshoot service-to-service communication for request type, traffic volume, errors, response time, and more.


Q: How does Amazon VPC Lattice work?
You can use VPC Lattice to create logical application layer networks, called service networks, that enable service-to-service communication across virtual private clouds (VPCs) and account boundaries, abstracting network complexity. It offers connectivity over HTTP/HTTPS and gRPC protocols through a dedicated data plane within VPC. This data plane is exposed through a link-local endpoint that can be accessed only from within your VPC.


Q: What are the key components of Amazon VPC Lattice?
VPC Lattice introduces four key components:

Service – An independently deployable unit of software that delivers a specific task or function. A service can live in any VPC or account and can run on instances, containers, or serverless compute. A service consists of listeners, rules, and targets groups, similar to an AWS Application Load Balancer.

Service directory – A centralized registry of all services that have been registered with VPC Lattice that you have created or have been shared with your account through AWS RAM.

Service network – A logical grouping mechanism to simplify how users enable connectivity and apply common policies to a collection of services. Service networks can be shared across accounts with AWS RAM and associated with VPCs to enable connectivity to a group of services.

Auth policy – Auth policy is an AWS Identity and Access Management (IAM) resource policy that you can associate with a service network and individual services to define access controls. Auth policy uses IAM, and you can specify rich principal-action-resource-condition (PARC)-style questions to enforce context-specific authorization on VPC Lattice services. Typically, an organization would apply coarse-grained Auth policies at the service network, such as “only authenticated requests within my org-id are allowed,” and more granular policies at the service level.

======================================================================
A solutions architect needs to capture IP traffic logs going in and out of the network interfaces of the Amazon EC2 instances inside of an Amazon VPC. The records need to capture network internet protocol (IP) traffic flow transmitted by a 5-tuple. This information must be publishable in Amazon CloudWatch Logs.

What service function would you use to cover all the subnets that belong to the same VPC?

VPC IP Address Manager (IPAM)
"VPC Flow Logs"
Network Access Analyzer
VPC Reachability Analyzer

To capture IP traffic logs going in and out of the network interfaces of Amazon EC2 instances inside a VPC, and to publish this information in Amazon CloudWatch Logs, you would use:

VPC Flow Logs

VPC Flow Logs capture information about the IP traffic going to and from network interfaces in a VPC. This information includes details like source and destination IP addresses, source and destination ports, protocol, and action (accept or reject).

So, to cover all subnets belonging to the same VPC, you would set up VPC Flow Logs for that VPC.

========================================================================
A customer has two AWS accounts. One of them is a devtest account used by their development and QA teams and the other one is a production account where currently all their production workloads are running. The customer has several Amazon VPCs in both the accounts. The customer is using Amazon Route 53 as DNS service in both of their AWS accounts and planning to have Private Hosted Zones created. The customer is looking for a solution with which they could have ease of management and efforts for the Private Hosted Zones.

Which of the following options has the least administrative efforts and ease of management for the customer to associate VPCs and Private Hosted Zones with Route 53 service?


Amazon VPCs from the different AWS account are associated by default with the Private Hosted Zone in the other account as both accounts belongs to the same customer.

Associate VPCs belonging to different accounts with a single hosted zone.

```````Create Private Hosted Zones in both the AWS accounts separately and associate their respective Amazon VPCs with their corresponding Private Hosted Zones.

Customer could write a script for the Amazon VPCs in one account to be associated with the Private Hosted Zone of the other AWS Account and host that script on AWS Lambda which can perform the job for the customer.
----------------
The option that has the least administrative efforts and ease of management for the customer to associate VPCs and Private Hosted Zones with Route 53 service is:

Create Private Hosted Zones in both the AWS accounts separately and associate their respective Amazon VPCs with their corresponding Private Hosted Zones.

By creating separate Private Hosted Zones in each AWS account and associating the corresponding Amazon VPCs, the customer can maintain clear and organized DNS configurations for their devtest and production environments. This approach ensures simplicity and separation of concerns. It's also a straightforward and standard practice for managing Private Hosted Zones in different AWS accounts.
======================================================================
A solutions architect needs to test the connectivity of different protocols, such as ICMP, between an Amazon EC2 instance and an Internet Gateway, both in the same AWS account.

Which service can the solutions architect use?


Network Access Analyzer

```````````````VPC Reachability Analyzer

VPC IP Address Manager (IPAM)

VPC Flow Logs
=======================================================================
Your company uses an Amazon EC2 instance in a public subnet to host a web application. The Amazon EC2 instance uses a default security group. The network ACL is configured to block all traffic to the instance. You must allow incoming traffic on port 443 to access the application from any source.

Which combination of steps will accomplish this requirement? (Select TWO)


In the network ACL, add a rule to allow inbound TCP traffic on port 443 from source 0.0.0.0/0 and outbound traffic on port 1024-65535 to the destination 0.0.0.0/0.

This allows inbound traffic on port 443 and outbound traffic on ephemeral ports (1024-65535) from any source to any destination.

In the security group, add a rule to allow TCP connections on port 443 from the source 0.0.0.0/0.

This allows incoming TCP traffic on port 443 from any source.
========================================================================