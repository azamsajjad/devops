Q 1 : Install and configure ansible
User sandy has been created on your control node with the appropriate permissions already, do not change or modify ssh keys. Install the necessary packages to
run ansible on the control node. Configure ansible.cfg to be in folder /home/sandy/ansible/ansible.cfg and configure to access remote machines via the sandy user.
All roles should be in the path /home/sandy/ansible/roles. The inventory path should be in
/home/sandy/ansible/invenlory.
Configure these nodes to be in an inventory file where node I is a member of group dev. nodc2 is a member of group test, node3 is a member of group proxy,
nodc4 and node 5 are members of group prod. Also, prod is a member of group webservers.
----------------------------------------------------------------
Q 2 : Create shell script to enable repos
name=EX294_BASE 
description="EX294 Base Repo 
baseurl=http://example.com/BaseOS 
gpgkey=http://example.com/rpm-gpg-key

name=EX294_AppStream
description="EX294 Base Repo
baseurl=http://example.com/AppStreamOS 
gpgkey=http://example.com/rpm-gpg-key'
----------------------------------------------------------------
Q 3 : Create a file called packages.yml in /home/sandy/ansible to install some packages for the following
hosts. On dev, prod and webservers install packages httpd, mod_ssl, and mariadb. On dev only install the
development tools package. Also, on dev host update all the packages to the latest.
----------------------------------------------------------------
Q 4 : Install rhel system role package, Use a rhel system role to create a playbook called timesync.yml that: 
- runs on all managed nodes 
- uses the timesync role 
- configure the role to use currently active NTP provider 
- configure the role to use the time server 172.24.1.254
- configure the role to enable iburst parameter 

----------------------------------------------------------------
Q 5 : Install SElinux roles and enable selinux enforcing on all managed nodes.
use a rhel system role install the rhel system role package
enable SElinux state 'enforcing' and policy 'targeted' mode on all managed nodes 

----------------------------------------------------------------
Q 6 : install roles using Ansible Galaxy with a requirements.yml file /home/user/ansible/roles/requirements.yml to download and install roles to /roles  
URL: http://workstation.lab.example.com/galaxyroles/haproxy.tar
or 
https://github.com/geerlingguy/ansible-role-haproxy.git 
The name of the role should be balancer 
AND 
https://github.com/bbatsche/Ansible-PHP-Site-Role.git 
The name of the role should be phpinfo

----------------------------------------------------------------
Q 7 : - (Exam Topic 2)
Create a role called apache in "/home/admin/ansible/roles" with the following requirements:
--> The httpd package is installed, enabled on boot, and started.
--> The firewall is enabled and running with a rule to allow access to the web server.
--> template file index.html.j2 is used to create the file /var/www/html/index.html with the output:
Welcome to HOSTNAME on IPADDRESS
--> Where HOSTNAME is the fqdn of the managed node and IPADDRESS is the IP-Address of the managed node.
note: you have to create index.html.j2 file.
--> Create a playbook called httpd.yml that uses this role and the playbook runs on hosts in the webservers host group.

----------------------------------------------------------------
Q 8 : Create a playbook called balance.yml as follows:
* The playbook contains a play that runs on hosts in balancers host group and uses the balancer role.
--> This role configures a service to loadbalance webserver requests between hosts in the webservers host group.curl
--> When implemented, browsing to hosts in the balancers host group (for example
http://node5.example.com)
should produce the following output:
Welcome to node3.example.com on 192.168.10.z
--> Reloading the browser should return output from the alternate web server: Welcome to node4.example.com on 192.168.10.a

* The playbook contains a play that runs on hosts in webservers host group and uses the phphello role.
--> When implemented, browsing to hosts in the webservers host group with the URL / hello.php should produce the following output:
Hello PHP World from FQDN
--> where FQDN is the fully qualified domain name of the host. For example,
browsing
to http://node3.example.com/hello.php, should produce the following output: Hello PHP World from node3.example.com
*
Similarly, browsing to http://node4.example.com/hello.php, should produce the following output:
Hello PHP World from node4.example.com

----------------------------------------------------------------
Q 9 : Create Logical volumes with lvm.yml in all nodes according to following requirements.
* Create a new Logical volume named as 'data'
* LV should be the member of 'research' Volume Group
* LV size should be 1500M
* It should be formatted with ext4 file-system.
--> If Volume Group does not exist then it should print the message "VG Not found"
--> If the VG can not accommodate 1500M size then it should print "LV Can not be created with
following size", then the LV should be created with 800M of size.
--> Do not perform any mounting for this LV.

----------------------------------------------------------------
Q 10 : Create a playbook with the name, install.yml in /home/lisa/ansible. The playbook will do the following:

– Execute on managed hosts in the production host group
-install the web services which are; php, httpd, and postgresql.

-start and enable the web services which are; php,httpd, and postgresql. If any of the web services fails to be started and enabled, print the message “one of the services can’t be started and enabled”.

-Turn off EnableSendfile option in the httpd configuration file (/etc/httpd/conf/httpd.conf).

To turn it off, the EnableSendfile option must be set as; (EnableSendfile off). The httpd service must be restarted for changes to take effect.

– add the http and https connections to the firewall rule.

The conditions for the tasks to run are as follow:
-The operating system must be Red Hat
-System memory must be greater than 152 mb
If you must create a variable file, it should be created with the name, lamp.yml, and in /home/lisa/ansible.

----------------------------------------------------------------
Q 11 : Modify file content.
Create a playbook called /home/admin/ansible/modify.yml as follows:
* The playbook runs on all inventory hosts
* The playbook replaces the contents of /etc/issue with a single line of text as
follows:
→ On hosts in the dev host group, the line reads: ‘’Development’’
→ On hosts in the test host group, the line reads: ‘’Test’’
→ On hosts in the prod host group, the line reads: ‘’Production’’

----------------------------------------------------------------
Q 12 : Create a playbook called web.yml as follows:
* The playbook runs on managed nodes in the "dev" host group
* Create the directory /webdev with the following requirements:
--> membership in the apache group
--> regular permissions: owner=r+w+execute, group=r+w+execute, other=r+execute s.p=set group-id
* Symbolically link /var/www/html/webdev to /webdev
* Create the file /webdev/index.html with a single line of text that reads: “Development”
-->
it should be available on http://servera.lab.example.com/webdev/index.html

----------------------------------------------------------------
Q 13 : Create a jinja template in /home/sandy/ansible/ and name it hosts.j2. Edit this file so it looks like the one below. The order of the nodes doesn't matter. Then create
a playbook in /home/sandy/ansible called hosts.yml and install the template on dev node at /root/myhosts

127.0.0.1 localhost localhost.localdomain localhost4 localhot4.localdomain4
::1     localhost localhost.localdomain localhost6 localhost6.localdomain6

10.0.2.1 node1.example.com node1
10.0.2.1 node2.example.com node2
10.0.2.1 node3.example.com node3
10.0.2.1 node4.example.com node4
10.0.2.1 node5.example.com node5
10.0.2.1 node6.example.com node6

------------------------------------------------------------------
Q 14 : Create a file in /home/sandy/ansible/ called report.yml. Using this playbook, get a file called report.txt (make it look exactly as below). Copy this file over to all
remote hosts at /root/report.txt. Then edit the lines in the file to provide the real information of the hosts. If a disk does not exist then write NONE.

[ansible@x230 automation]$ vim files/hwreport.empty
HOST=inventory_hostname
MEMORY=memory_in_mb
BIOS=bios_version
VDA_DISK=disk_nvme0_size
VDB_DISK=disk_nvme1_size

------------------------------------------------------------------
Q 15 : Write a Bash script that queries each server for its Ansible facts, and outputs that information to a file in /tmp; there should be one file for each server name.
We want to get each host's Ansible facts and dump the information into respective text files. So you've got to write a script, facts.sh, that will query each one and put its relevant info into a text file. 

------------------------------------------------------------------
Q 16 : Create user accounts
-----------------------
--> A list of users to be created can be found in the file called user_list.yml
which you should download from http://classroom.example.com/user_list.yml and
save to /home/admin/ansible/
--> Using the password vault created elsewhere in this exam, create a playbook called create_user.yml
that creates user accounts as follows:
--> Users with a job description of developer should be:
--> created on managed nodes in the "dev" and "test" host groups assigned the password from the "dev_pass"
variable and these user should be member of supplementary group "devops".
--> Users with a job description of manager should be:
--> created on managed nodes in the "prod" host group assigned the password from the "mgr_pass" variable
and these user should be member of supplementary group "opsmgr"
--> Passwords should use the "SHA512" hash format. Your playbook should work using the vault password file created elsewhere in this exam.
while practising you to create these file hear. But in exam have to download as per questation.
user_list.yml file consist:
--
user:
- name: user1 job: developer
- name: user2 job: manager

------------------------------------------------------------------
Q 17 : Ansible vault rekey 

------------------------------------------------------------------
Q 18 : Cronjob for natasha