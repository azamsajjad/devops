# 3 components of your WORKER node
kubelet
CRI
Proxy

> kubelet: 
(runs as a service, not as a component)
kubelet is agent of all your worker nodes
API server will pass on schedular's will to kubelet that your node has been selected to deploy a container. now deploy

> CRI - container Runtime Interface
it actually deploys that container
e.g. crio or 
     docker or 
     containerd or 8 more

> CNI - Proxy - Container Network Interface
inside k8s cluster, all your containers can communicate with eachother
kube-Proxy provide that networking with a network plugin
e.g. calico - a CNI - container networking interface
     flannel
     weave

ps: in docker/docker swarm, they provide their own network - CNM
ps: but in kubernetes, it provides no networking plugin. why?
  because you have a big choice with CRI - e.g. one network plugin only works with docker, another with containerd
  so k8s say, bring your own CNI too when you choose your own CRI


# 4 components of your MASTER node

user -> kubectl -> K8s API Server (listens on 6443 default)
                   Schedular
                   Controller Manager
                   ETCD

> Schedular: 
where to put pods in the nodes

> Controller Manager:
You have multiple Controller Manager e.g. 
  node controller
  pods controllers
  deployment
  daemon-sets

Makes sure that your Desired State to yuor Actual State
This process is called Self-healing Properties

if your node goes down, it becomes unreachable to controller manager. so it create new pods in avl nodes

> ETCD
all info about your cluster is stored in ETCD database
database with key value pairs
e.g.
kubectl get nodes -> API -> ETCD (how many nodes?)



> K8S API SERVER
# kubectl